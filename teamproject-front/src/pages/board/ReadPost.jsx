import React, {useState, useEffect} from 'react';
import {useParams} from 'react-router-dom';
import './ReadPost.css';

const ReadPost = () => {
    const params = useParams();
    const [post, setPost] = useState(null);
    const [comments, setComments] = useState([]);
    const [newComment, setNewComment] = useState('');
    const [likes, setLikes] = useState(0);

    useEffect(() => {
        // Í≤åÏãúÍ∏Ä Îç∞Ïù¥ÌÑ∞Î•º Í∞ÄÏ†∏Ïò§Îäî API Ìò∏Ï∂ú ÏòàÏ†ú
        const fetchPost = async () => {
            // Ïó¨Í∏∞ÏÑú Ïã§Ï†ú API Ìò∏Ï∂ú ÏΩîÎìú ÏûëÏÑ±
            const postData = {
                id: params.id,
                author: 'jeff93',
                date: '23.10 Ïò§ÏÇ¨Ïπ¥',
                title: 'Ïò§ÏÇ¨Ïπ¥',
                content: 'Ïò§ÏÇ¨Ïπ¥Ïóê ÎåÄÌïú ÎÇ¥Ïö©ÏûÖÎãàÎã§.',
                timeAgo: '26Î∂ÑÏ†Ñ',
                likes: 1,
            };
            setPost(postData);
            setLikes(postData.likes);
        };

        const fetchComments = async () => {
            // ÎåìÍ∏Ä Îç∞Ïù¥ÌÑ∞Î•º Í∞ÄÏ†∏Ïò§Îäî API Ìò∏Ï∂ú ÏòàÏ†ú
            const commentsData = [
                {id: 1, author: '„Öá„Ñ±', content: '„Öá„Öá„Öá„Öá„Öá„Öá„Öá', likes: 0, time: '25Î∂ÑÏ†Ñ'},
                // Îçî ÎßéÏùÄ ÎåìÍ∏ÄÎì§
            ];
            setComments(commentsData);
        };

        fetchPost();
        fetchComments();
    }, [postId]);

    const handleCommentChange = (e) => {
        setNewComment(e.target.value);
    };

    const handleCommentSubmit = () => {
        if (newComment.trim()) {
            const newCommentObject = {
                id: comments.length + 1,
                author: 'ÌòÑÏû¨ ÏÇ¨Ïö©Ïûê', // Ïã§Ï†ú ÏÇ¨Ïö©Ïûê Ïù¥Î¶ÑÏúºÎ°ú ÍµêÏ≤¥
                content: newComment,
                likes: 0,
                time: 'Î∞©Í∏à'
            };
            setComments([...comments, newCommentObject]);
            setNewComment('');
        }
    };

    const handleLikeClick = () => {
        setLikes(likes + 1);
    };

    if (!post) {
        return <div>Loading...</div>;
    }

    return (
        <div className="readpost-container">
            <header className="readpost-header">
                <button className="back-button" onClick={() => window.history.back()}>‚Üê</button>
                <h1>{post.title}</h1>
                <button className="more-button">‚ãØ</button>
            </header>
            <div className="post-detail">
                <div className="post-header">
                    <img className="profile-picture" src="path_to_profile_image" alt="profile"/>
                    <div className="post-info">
                        <span className="username">{post.author}</span>
                        <span className="location-date">{post.date}</span>
                    </div>
                </div>
                <div className="post-content">
                    <h2>{post.title}</h2>
                    <p>{post.content}</p>
                </div>
                <div className="post-footer">
                    <span onClick={handleLikeClick}>üëç {likes}</span>
                    <span>üí¨ {comments.length}</span>
                    <span className="post-time">{post.timeAgo}</span>
                </div>
            </div>
            <div className="comments-section">
                {comments.map((comment) => (
                    <div key={comment.id} className="comment">
                        <img className="profile-picture" src="path_to_commenter_image" alt="commenter"/>
                        <div className="comment-content">
                            <span className="comment-username">{comment.author}</span>
                            <p>{comment.content}</p>
                            <div className="comment-footer">
                                <span>üëç {comment.likes}</span>
                                <span>ÎãµÍ∏ÄÎã¨Í∏∞</span>
                                <span className="comment-time">{comment.time}</span>
                            </div>
                        </div>
                        <button className="more-button">‚ãØ</button>
                    </div>
                ))}
            </div>
            <div className="comment-input-section">
                <input
                    type="text"
                    value={newComment}
                    onChange={handleCommentChange}
                    placeholder="ÎåìÍ∏ÄÏùÑ Ïç®Ï£ºÏÑ∏Ïöî."
                />
                <button className="submit-comment" onClick={handleCommentSubmit}>
                    Îì±Î°ù
                </button>
            </div>
        </div>
    );
};

export default ReadPost;
